@model Dumpwinkel.Web.Models.EventListViewModel

@{
    ViewBag.Title = "Evenementen";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Evenementen</h2>

<p>
    @Html.ActionLink("Nieuw evenement", "Create")
</p>

<div class="btn-toolbar mb-2" role="toolbar">
    <div class="col-md-3">
        <input type="text" class="form-control" id="Date" name="Date" />
    </div>
</div>

<table id="events-table" class="table">
    <thead>
        <tr>
            <th>
                Start
            </th>
            <th>
                Eind
            </th>
            <th>
                Maximum aantal
            </th>
            <th>
                #Geregistreerd
            </th>
            <th>
                #Beschikbaar
            </th>
            <th>
                #Pending
            </th>
        </tr>
    </thead>

    <tbody>
        <tr class="prototype d-none">
            <td class="startTime"></td>
            <td class="endTime"></td>
            <td class="maxPersons"></td>
            <td class="registered"></td>
            <td class="available"></td>
            <td class="pending"></td>
        </tr>

    </tbody>


</table>



@section scripts
{
    <script type="text/javascript" src="~/Scripts/moment.js"></script>
    <script type="text/javascript" src="~/Scripts/nl.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">



        function refreshSlots(date) {
            $('#events-table tbody').empty();

            $.getJSON('/api/event', { date: date }, function (result) {
                $.each(result, function (index, event) {
                    var row = $('<tr />');
                    var startTime = $('<td />').text(event.StartTime);
                    var endTime = $('<td />').text(event.EndTime);
                    var registrationsLink = $('<a />').attr('href', '/admin/registration?eventId=' + event.Id).text(event.MaxPersons);
                    var maxPersons = $('<td />').append(registrationsLink);
                    var pending = $('<td />').text(event.Pending);
                    var registered = $('<td />').text(event.Registered);
                    var available = $('<td />').text(event.Available);

                    row.append(startTime);
                    row.append(endTime);
                    row.append(maxPersons);
                    row.append(registered);
                    row.append(available);
                    row.append(pending);
                    $('#events-table tbody').append(row);
                });

            });
        }

        function refreshCalendar(date) {
            var disabledDates = [];
             $.getJSON('/api/calendar', { currentDate: date }, function (result) {
                $.each(result, function (index, day) {
                    disabledDates.push(moment(day.Date));
                });

                 $('#Date').data("DateTimePicker").disabledDates(disabledDates);
            });
        }

        $(function () {

            $('#Date').datetimepicker({
                format: 'L',
                date: "@Model.Date"
            });

            $('#Date').on("dp.change", function (e) {
                refreshSlots(e.date.format('YYYY-MM-DD'));
            });

            $('#Date').on("dp.update", function (e) {
                refreshCalendar(e.viewDate.format('YYYY-MM-DD'));
            });

            refreshCalendar("@Model.Date");
            refreshSlots("@Model.Date");
        });
    </script>
}
